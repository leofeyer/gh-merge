#!/bin/bash
set -eo pipefail

die() {
	echo -e "\033[0;31m$*\033[0m" >&2
	exit 1
}

confirm() {
	echo -e "\033[0;32mâœ“\033[0m $*"
}

display_help() {
	cat <<-EOF

Usage:  gh merge {<number>} [options]

Options:
  -h, --help   Display the help information

	EOF
}

body() {
	cat <<-EOF
	Description
	-----------

	{{.body}}

	Commits
	-------

	{{range .commits}}
	{{- printf "%.8s" .oid}} {{.messageHeadline}}
	{{end}}
	EOF
}

authors() {
	cat <<-EOF
	{{range .commits}}
	{{- range .authors}}
	{{- if ne .login $.author.login}}
	Co-authored-by: {{.name}} <{{.email}}>
	{{- end}}{{end}}{{end}}
	EOF
}

thank_you() {
	local user author answer

	user=$(gh config get user -h github.com)
	author=$(gh pr view "$PR" --json author -q .author.login)

	if [[ $user == "$author" ]]; then
		return
	fi

	echo -n "Say thank you? (Y/n): "
	read -r answer

	if [[ ${answer:-y} == "y" ]]; then
		gh pr comment "$PR" --body "Thank you @$author."
	fi
}

merge() {
	local closed subject body authors answer

	if [[ $PR == "" ]]; then
		PR="$(gh pr view --json number -q .number)"
	fi

	closed=$(gh pr view "$PR" --json closed -q .closed)

	if [[ $closed == "true" ]]; then
		die "The pull request #$PR is closed."
	fi

	subject=$(gh pr view "$PR" --json title,number --template '{{.title}} (see #{{.number}})')
	body=$(gh pr view "$PR" --json body,commits --template "$(body)" | tr -d '\r' | sed '/<!--/,/-->/d' | cat -s)
	authors=$(gh pr view "$PR" --json author,commits --template "$(authors)" | awk '!x[$0]++')

	if [[ $authors != "" ]]; then
		body+=$'\n'"$authors"
	fi

	echo
	echo "$body"
	echo

	echo -en "Merge \033[0;33m$subject\033[0m now? (y/N): "
	read -r answer

	if [[ ${answer:-n} != "y" ]]; then
		die "Cancelled."
	fi

	gh pr merge "$PR" --subject "$subject" --body "$body" --squash "${FLAGS[@]}"
	thank_you

	confirm "The pull request #$PR has been merged."
}

PARAMS=''
FLAGS=()

while (( "$#" )); do
	case "$1" in
		-h|--help)
			display_help
			exit 0
			;;
		--admin|--auto)
			FLAGS+=("$1")
			shift
			;;
		-*)
			die "Unsupported flag: $1"
			;;
		*)
			PARAMS="$PARAMS $1"
			shift
			;;
	esac
done

eval set -- "$PARAMS"

PR="$1"
merge

exit 0
